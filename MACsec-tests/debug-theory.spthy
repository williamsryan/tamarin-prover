theory MACsec_Debug
begin

section{* Tester for MACsec stuff. *}

/*
 *
 * Protocol:	MACsec
 *
 * Based on:    Component-Based Formal Analysis of 5G-AKA:
 *              Channel Assumptions and Session Confusion
 *
 * Channels:    TODO
 *
 * Functions:   TODO
 *
 * Modeler: 	Ryan Williams
 * Date: 	    May 2023
 *
 * Status: 	    DEVELOPMENTAL
 *
 */

 builtins:
    multiset,
    symmetric-encryption

 functions:
    KDF/3,  // KDF function.
    MAC/2   // MAC function.

 // Initialisation rule.
 rule preconfigure:
    let
    PSK = ~CAK
    ICK = KDF('0', 'ick', ~CAK)
    in
    [ Fr(~CAK) ]
    --[ Preconfigure(~CAK) ]->
    [ !Cak($A, PSK), !Cak($B, PSK), !Ick($A, ICK), !Ick($B, ICK) ]

 rule nonce_distribution:
    let
    nonce = ~nonce
    ntag = MAC(~nonce, ICK) // Verify this later.
    in
    [ Fr(~nonce), !Cak($A, PSK), !Cak($B, PSK), !Ick($A, ICK), !Ick($B, ICK) ]
    -->
    [ Asak(KDF(~nonce, 'sak', ~CAK)), Out(ntag), Out(~nonce) ]

 rule sak_derivation:
   // Bob runs MAC function on nonce using ICK.
   let
   ntag_prime = MAC(~nonce, ICK)
   in
   [ Asak(KDF(~nonce, 'sak', ~CAK)), In(ntag), In(~nonce) ]
   -->
   [ !Bsak(KDF(~nonce, 'sak', ~CAK)) ]

 rule sec_send:
   // Bob sends encoded message back to Alice.
   let
   m = ~m
   in
   [ Fr(~m), !Bsak(KDF(~nonce, 'sak', ~CAK)) ]
   -->
   [ Send($B, $A, senc(Bsak, m)), Out(senc(Bsak, m)) ]
   //[ senc(!Bsak, m), Out(senc(!Bsak, m))]

 rule sec_recv:
   // Alice reads encoded message from Bob.
   [ !Asak(KDF(~nonce, 'sak', ~CAK)), In(m) ]
   -->
   [ Receive($B, $A, sdec(Asak, m)) ]

 // Adversary rules.
 rule reveal_session_a:
   [ !Asak(KDF(~nonce, 'sak', ~CAK)) ]
   --[ SessionRevealA(sak) ]->
   [ Out(Asak) ]

 rule reveal_session_b:
   [ !Bsak(KDF(~nonce, 'sak', ~CAK)) ]
   --[ SessionRevealB(sak) ]->
   [ Out(Bsak) ]

//  rule reveal_cak:
//    [  ]

 lemma message_secrecy:
   "
   not(
      Ex A B #i #j.
         Asak() @ #i & Bsak() @ #j
         & DY(sak) @ #j
      // & not(Ex #r. SessionRevealA(A) | SessionRevealB(B) @ r)
      // | (Ex #r. CakReveal(A) | CakReveal(B))
   )
   "

end
